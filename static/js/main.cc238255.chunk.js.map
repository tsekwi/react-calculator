{"version":3,"sources":["calc-symbols.js","Button.js","Button.module.css","App.js","reportWebVitals.js","index.js"],"names":["calcSymbols","Button","num","value","change","classy","idx","type","id","onClick","e","slice","undefined","target","className","styles","button","submit","module","exports","App","useState","setValue","handleSubmit","preventDefault","result","eval","replace","String","updateState","handleChange","newValue","onSubmit","placeholder","onChange","map","keys","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wGAEeA,IAFK,CAAC,IAAI,IAAI,IAAI,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,IAAI,OAAI,OAAI,IAAI,M,wDCiC/DC,IA/BA,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,IAAKC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,IAe1C,MAAY,MAARJ,EAEI,wBACAK,KAAK,SACLC,GAAKN,EACLC,MAAQD,EACRO,QApBa,SAAAC,GACjB,OAAQR,GACJ,IAAK,IACDE,EAAO,IACP,MACJ,IAAK,KACDA,EAAOD,EAAMQ,MAAM,GAAG,IACtB,MACJ,aAC2BC,IAAnBF,EAAEG,OAAOV,OACbC,EAAOD,EAAQO,EAAEG,OAAOV,SAW5BW,UAAYC,IAAOC,OAAP,WAAoBX,EAApB,gBALZ,SAK8EH,GAAjBG,EAASC,GAK1E,wBAAQQ,UAAYC,IAAOC,OAAP,gBAAkCD,IAAOE,OAASV,KAAK,SAA3E,cAA0F,SAAWD,K,gBC5B7GY,EAAOC,QAAU,CAAC,OAAS,uBAAuB,OAAS,yB,imCCMrDC,IAAM,SAANA,MAAa,IAAD,UACUC,oDAAS,IADnB,oMACTlB,MADS,cACFmB,SADE,cAEVC,aAAe,SAAfA,aAAeb,GACnBA,EAAEc,iBAEF,IAAMC,OAASC,KAAKvB,MAAMwB,QAAQ,QAAM,KAAKA,QAAQ,QAAM,MAC3DL,SAASM,OAAOH,UAEZI,YAAc,SAAAnB,GAAC,OAAIY,SAASZ,EAAEG,OAAOV,QACrC2B,aAAe,SAAAC,GAAQ,OAAIT,UAAS,kBAAMS,MAEhD,OACE,oEAAMC,SAAWT,aAAjB,UACE,oEAAOhB,KAAK,OAAO0B,YAAY,uBAAuB9B,MAAQA,MAAQ+B,SAAWL,cACjF,mEAAKf,UAAU,gBAAf,UACE,2EACI,kEAAKA,UAAU,SAAf,SAEId,6CAAYmC,KAAI,SAACjC,EAAKI,GACpB,OAAIA,EAAM,EACH,2DAAC,uCAAD,CAAQJ,IAAMA,EAAMC,MAAQA,MAAQC,OAAS0B,aAAezB,OAAO,UAAU+B,KAAOlC,IAC/E,UAKtB,mEAAKY,UAAU,iBAAf,UACE,2EACE,kEAAKA,UAAU,SAAf,SAEId,6CAAYmC,KAAI,SAACjC,EAAKI,GACpB,OAAIA,EAAM,GAAKA,EAAM,GACd,2DAAC,uCAAD,CAAQJ,IAAMA,EAAMC,MAAQA,MAAQC,OAAS0B,aAAezB,OAAO,UAAU+B,KAAOlC,IAC/E,SANX,aAWT,2EACE,kEAAKY,UAAU,SAAf,SAEId,6CAAYmC,KAAI,SAACjC,EAAKI,GACpB,OAAIA,EAAM,IAAMA,EAAM,GACf,2DAAC,uCAAD,CAAQJ,IAAMA,EAAMC,MAAQA,MAAQC,OAAS0B,aAAezB,OAAO,UAAU+B,KAAOlC,IAC/E,kBAhCU,aA2CzBkB,2B,0JClDAiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5B,EAAA,EAAD,MAEF6B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.cc238255.chunk.js","sourcesContent":["const calcSymbols = ['(',')','C','CE',7,8,9,4,5,6,1,2,3,0,'.','=','÷','×','-','+'];\n\nexport default calcSymbols;","import styles from './Button.module.css';\n\nconst Button = ({ num, value, change, classy, idx }) => {\n    const handleChange = e => {\n        switch (num) {\n            case 'C':\n                change('');\n                break;\n            case 'CE':\n                change(value.slice(0,-1));\n                break;\n            default:\n                if (e.target.value !== undefined) \n                change(value + e.target.value);\n                break;\n        }\n    }\n    if (num !== '=') {\n        return (\n            <button \n            type=\"button\" \n            id={ num } \n            value={ num } \n            onClick={ handleChange } \n            className={ styles.button + ` ${classy} text-center` } key={ classy + idx }>{ num }</button>\n        );\n    } \n    else \n    return (\n        <button className={ styles.button + ` text-center ` + styles.submit } type=\"submit\" key={ 'group_' + idx }>=</button>\n    );\n}\n\nexport default Button;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1DqCU\",\"submit\":\"Button_submit__1vkTD\"};","import { useState } from \"react\";\nimport calcSymbols from './calc-symbols';\n// import parsePlusSeparatedExpression from './math-expression-parser';\nimport Button from './Button';\nimport './foundation.min.css';\nimport './style.scss';\n\nconst App = () => {\n  const [value, setValue] = useState('');\n  const handleSubmit = e => {\n    e.preventDefault();\n    // const result = parsePlusSeparatedExpression(value.replace(/×/g, '*').replace(/÷/g, '/'), '+');\n    const result = eval(value.replace(/×/g, '*').replace(/÷/g, '/'));\n    setValue(String(result));\n  }\n  const updateState = e => setValue(e.target.value);\n  const handleChange = newValue => setValue(() => newValue);\n\n  return (\n    <form onSubmit={ handleSubmit } key=\"parent_1\">\n      <input type=\"text\" placeholder=\"Start Calculating...\" value={ value } onChange={ updateState } />\n      <div className=\"btn-container\">\n        <div>\n            <div className=\"grid-4\">\n              {\n                calcSymbols.map((num, idx) => {\n                  if (idx < 4) \n                  return <Button num={ num } value={ value } change={ handleChange } classy=\"group_1\" keys={ num } /> \n                  else return \"\"\n                })\n              }\n            </div>\n        </div>\n        <div className=\"grid-container\">\n          <div key=\"child_3-2\">\n            <div className=\"grid-3\">\n              {\n                calcSymbols.map((num, idx) => {\n                  if (idx > 3 && idx < 16) \n                  return <Button num={ num } value={ value } change={ handleChange } classy=\"group_2\" keys={ num } /> \n                  else return \"\"\n                })\n              }\n            </div>\n          </div>\n          <div>\n            <div className=\"grid-1\">\n              {\n                calcSymbols.map((num, idx) => {\n                  if (idx > 15 && idx < 20) \n                  return <Button num={ num } value={ value } change={ handleChange } classy=\"group_3\" keys={ num } /> \n                  else return \"\"\n                })\n              }\n            </div>\n          </div> \n        </div>\n      </div>\n    </form>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}